name: Build Release APK

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Print and Decode Keystore
        env:
          DOCDOC_KEYSTORE_BASE64: ${{ secrets.DOCDOC_KEYSTORE_BASE64 }}
        run: |
          echo "Keystore Base64 (partial): ${DOCDOC_KEYSTORE_BASE64:0:10}..."
          echo "$DOCDOC_KEYSTORE_BASE64" | base64 -d > app/docdoc.jks

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build Release APK
        env:
          DOC_DOC_KEY_STORE_PASSWORD: ${{ secrets.DOCDOC_KEYSTORE_PASSWORD }}
          DOC_DOC_ALIAS_PASSWORD: ${{ secrets.DOC_DOC_ALIAS_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Set up Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash
          firebase --version

      - name: Upload APK to Firebase
        env:
          DOC_DOC_FIREBASE_CREDENTIALS: ${{ secrets.DOC_DOC_FIREBASE_CREDENTIALS }}
        run: |
          echo "$DOC_DOC_FIREBASE_CREDENTIALS" > firebase_credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/firebase_credentials.json"
          gcloud auth activate-service-account --key-file="$GOOGLE_APPLICATION_CREDENTIALS"
          gcloud config set project your-firebase-project-id
          curl -sL https://firebase.tools | bash
          firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
            --app "1:588231378907:android:ce0647a8f2efb980ab89fe" \
            --groups "ME" \
            --release-notes "ðŸš€ New release from CI/CD"

      - name: Upload Release APK to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk
          
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Release APK
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk

      - name: Create GitHub Release and Upload APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.0  # Static for now, todo: You can use a dynamic value using git tags
          name: Release v1.0.0
          files: app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
